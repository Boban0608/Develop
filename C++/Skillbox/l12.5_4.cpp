/*
Ряд чисел* (дополнительное задание)
Что нужно сделать
В программе инициализирован массив из 15 целых положительных чисел. Эти числа являются 
множеством из 14 последовательных чисел, начиная с Х (Х может быть любым), а одно число из 
ряда повторяется. Необходимо найти повторяющееся число и вывести его в консоль. По возможности 
используйте минимум дополнительной памяти и проходов по массиву.
Пример
int numbers[15] = {114, 111, 106, 107, 108, 105, 115, 108, 110, 109, 112, 113, 116, 117, 118} 
В данном примере Х — это 105, а повторяющееся число — 108.
Рекомендации по выполнению
Это задание с подвохом. Подумайте, как его можно было бы легко решить за O(n). На всякий 
случай оставляем для вас подсказку. Рекомендуем воспользоваться при необходимости.
Что оценивается
Используется массив int для хранения данных.
В коде не используются библиотеки, кроме <iostream>.
Программа корректно использует обращения по индексам и выдаёт правильный ответ.
Асимптотическая сложность алгоритма менее O(n^2).
*/

#include <iostream>
using namespace std;
int bubble_sort(int m[], bool k){
    for (int i = 0; i < 15; i++){
        for (int j = 0; j < 14 - i; ++j){
            if (m[j] > m[j + 1]) {
                m[j + 1] += m[j];
                m[j] = m[j + 1] - m[j];
                m[j + 1] -= m[j];
            }
        }
    }
    if (k) {
        for (int i = 0; i < 15; ++i){
            if (m[i] == m[i + 1]) return m[i];
        }
    }
    return m[0];
}
int main() {
  cout << "\nРяд чисел\n";
  cout << "--------------------------------\n";  
  int numbers[15] = {114, 111, 106, 107, 108, 105, 115, 109, 110, 109, 112, 113, 116, 117, 118};
  cout << "Start number is " << bubble_sort(numbers, 0) << " , duplicate is " << bubble_sort(numbers, 1);
  return 0; 
}