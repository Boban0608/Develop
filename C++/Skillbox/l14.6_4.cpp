/*
Умножение матрицы на вектор
Реализуйте частный случай умножения матрицы на матрицу, а именно умножение вектора на матрицу. 
Эта операция распространена в компьютерной индустрии в целом и в компьютерной графике в 
частности, поэтому это будет хорошим упражнением.
Итак, у нас есть четырёхкомпонентный вектор b, представленный с помощью массива, и матрица a 
размером 4 × 4, представленная в виде двумерного массива. Их произведением будет новый 
четырёхэлементный вектор c. Его компоненты будут суммой произведений элемента вектора b на 
строку матрицы a. Индекс столбца при этом равен индексу соответствующей компоненты вектора b, 
который мы и рассчитываем.
Все входные данные, матрица a и вектор b вносятся из пользовательского ввода.  Итоговый вектор 
c надо вывести в консоль (std::cout). Тип данных элементов — всегда float. Желательно 
реализовать этот алгоритм с помощью вложенного цикла на умножение колонки.
Советы и рекомендации
Во внутреннем цикле потребуется аккумулятор, накапливающий значение очередной ячейки 
результирующего вектора. Каждый раз не забывайте его обнулять до начала расчётов.
Что оценивается
Программа вычисляет результирующий вектор в соответствии с формулой перемножения матрицы на 
вектор.
*/

#include <iostream>
using namespace std;
void mult_mat(float matrix[][4], float vector[]){
    float vectorC[4];
    for (int i = 0; i < 4; i++){
        float tmp = 0;
        for (int j = 0; j < 4; j++){
            tmp += matrix[i][j] * vector[j];
        }
        vectorC[i] = tmp;
    }
    for (int i = 0; i < 4; i++){
        cout << vectorC[i] << " ";
    }
}
main() {
  cout << "----------------\n";
  cout << "Matrix multiplication\n";
  cout << "----------------\n";
  float matrix[4][4], vector[4];
  cout << "You need to input vector and matrix(4x4).\n";
  for (int i = 0; i < 4; i++){
    cout << "Input vector element: ";
    cin >> vector[i];
  } 
  for (int i = 0; i < 4; i++){
    for (int j = 0; j < 4; j++){
      cout << "Input matrix element: ";
      cin >> matrix[i][j];
    }   
  }
  cout << "----------------\n";
  cout << "Vector C - \n";
  mult_mat(matrix, vector);
  return 0; 
}